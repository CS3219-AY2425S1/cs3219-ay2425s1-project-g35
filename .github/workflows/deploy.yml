name: CI/CD - Build and Deploy

on:
  workflow_dispatch:

jobs:
  ci:
    name: Build and Push Docker Images

    runs-on: ubuntu-latest

    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Submit Cloud Build
        run: gcloud builds submit --config=cloudbuild.yaml .

  cd:
    name: Deploy to GKE

    runs-on: ubuntu-latest

    needs: ci

    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
  
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
  
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE Credentials
        run: gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }}

      - name: Set kubectl context
        run: kubectl config set-context $(kubectl config current-context) --namespace=default

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/mongo-user-db/
          kubectl apply -f k8s/mongo-question-db/
          kubectl apply -f k8s/user-service/
          kubectl apply -f k8s/question-service/
          kubectl apply -f k8s/frontend/
          kubectl apply -f k8s/matching-service/
          kubectl apply -f k8s/collaboration-service/
          kubectl apply -f k8s/chat-service/
          
      - name: Force Restart Deployment
        run: |
          kubectl rollout restart deployment user-service
          kubectl rollout restart deployment mongo-question
          kubectl rollout restart deployment frontend
          kubectl rollout restart deployment matching-service
          kubectl rollout restart deployment collaboration-service
          kubectl rollout restart deployment chat-service
          kubectl rollout restart deployment question-service


